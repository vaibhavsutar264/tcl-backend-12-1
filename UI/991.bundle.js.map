{"version":3,"file":"991.bundle.js","mappings":"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","sources":["webpack://tclcpasstwentyfirstoct/./src/components/header/Header.tsx","webpack://tclcpasstwentyfirstoct/./src/hooks/useLocales.tsx"],"sourcesContent":["import { SyntheticEvent } from 'react'\r\nimport { useDispatch as useAppDispatch } from '../../redux/store'\r\n// import { logout } from '../../redux-sample/auth/authSlice'\r\nimport { logout } from '../../redux/slices/authSlice'\r\nimport { useNavigate, Link } from 'react-router-dom'\r\nimport Logo from '../../assets/images/CPaaSLogo.png'\r\nimport { availableLanguages } from '../../i18n'\r\nimport useLocales from '../../hooks/useLocales'\r\nimport { useTranslation } from 'react-i18next'\r\nimport MenuItem from '@mui/material/MenuItem'\r\nimport FormControl from '@mui/material/FormControl'\r\nimport Select from '@mui/material/Select'\r\nimport { styled } from '@mui/material/styles'\r\nimport FormGroup from '@mui/material/FormGroup'\r\nimport FormControlLabel from '@mui/material/FormControlLabel'\r\nimport Switch from '@mui/material/Switch'\r\nimport DarkModeIcon from '@mui/icons-material/DarkMode'\r\nimport LightModeIcon from '@mui/icons-material/LightMode'\r\nimport Globe from '../../assets/images/svg/globe.svg'\r\nimport GlobeDark from '../../assets/images/svg/globe-dark.svg'\r\n\r\nimport {\r\n  getFromLocalStorage,\r\n  setInLocalStorage,\r\n} from '../../hooks/useLocalStorage'\r\nimport { apiVrbls, localStorageVar, typeVar } from '../../utils/constants'\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\nconst MaterialUISwitch = styled(Switch)(({ theme }) => ({\r\n  width: 62,\r\n  height: 34,\r\n  padding: 7,\r\n  '& .MuiSwitch-switchBase': {\r\n    margin: 1,\r\n    padding: 0,\r\n    transform: 'translateX(6px)',\r\n    '&.Mui-checked': {\r\n      color: '#fff',\r\n      transform: 'translateX(22px)',\r\n      '& .MuiSwitch-thumb:before': {\r\n        backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n          '#fff'\r\n        )}\" d=\"M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z\"/></svg>')`,\r\n      },\r\n      '& + .MuiSwitch-track': {\r\n        opacity: 1,\r\n        backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\r\n      },\r\n    },\r\n  },\r\n  '& .MuiSwitch-thumb': {\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#003892' : '#001e3c',\r\n    width: 32,\r\n    height: 32,\r\n    '&:before': {\r\n      content: \"''\",\r\n      position: 'absolute',\r\n      width: '100%',\r\n      height: '100%',\r\n      left: 0,\r\n      top: 0,\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundPosition: 'center',\r\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n        '#fff'\r\n      )}\" d=\"M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z\"/></svg>')`,\r\n    },\r\n  },\r\n  '& .MuiSwitch-track': {\r\n    opacity: 1,\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\r\n    borderRadius: 20 / 2,\r\n  },\r\n}))\r\n\r\nconst Header = ({ toggleTheme }: { toggleTheme: any }) => {\r\n  const { i18n } = useTranslation()\r\n  const { t } = useLocales()\r\n  const navigate = useNavigate()\r\n  const dispatch = useAppDispatch()\r\n  const { user } = useSelector((state: any) => state.auth || []);\r\n  const logoutHandler = async (e: SyntheticEvent) => {\r\n    e.preventDefault()\r\n    dispatch(logout({\r\n      refreshToken: `${localStorage.getItem(localStorageVar.TOKEN_VAR)}`,\r\n      username: user != null ? user[apiVrbls.USER.EMAIL_ID] : \"\"\r\n    }))\r\n    navigate('/')\r\n  }\r\n\r\n  const getitem = getFromLocalStorage(localStorageVar.THEME_VAR)\r\n\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <div className=\"container\">\r\n          <Link className=\"logo\" to=\"/\">\r\n            <img src={Logo} alt=\"CPAAS TCL\" />\r\n          </Link>\r\n          <ul className=\"navbar-items\">\r\n            <li className=\"item\">\r\n              {user !== null ? (\r\n                <Link to=\"\" onClick={logoutHandler}>\r\n                  {t<string>('logoutBtn')}\r\n                </Link>\r\n              ) : (window.location.pathname.match(/^\\/login/) ? ('') : <Link to=\"/login\">{t<string>('loginBtn')}</Link>)}\r\n            </li>\r\n            <li className=\"item\">\r\n              {/* <FormControl\r\n                sx={{\r\n                  m: 1,\r\n                  minWidth: 100,\r\n                }}\r\n                size=\"small\"\r\n                id=\"lang-background-white\"\r\n              > */}\r\n                {/* <InputLabel id=\"demo-select-small\">Language</InputLabel> */}\r\n                {/* <Select\r\n                  labelId=\"demo-select-small\"\r\n                  id=\"demo-select-header-small\"\r\n                  value={i18n.language}\r\n                  label=\"Language\"\r\n                  onChange={(e) => {\r\n                    i18n.changeLanguage(e.target.value)\r\n                    setInLocalStorage('lng', e.target.value)\r\n                  }}\r\n                >\r\n                  {availableLanguages.map((language) => (\r\n                    <MenuItem key={language} value={language}>\r\n\r\n                      {language}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl> */}\r\n              \r\n              <FormControl\r\n                    sx={{\r\n                        m: 1,\r\n                        minWidth: 100,\r\n                        position: 'relative',\r\n                    }}\r\n                    size=\"small\"\r\n                    // id=\"lang-background-white\"\r\n                    id=\"lang-background-invoices\" className='lang-background-loginscreens'\r\n                >\r\n                    <img\r\n                        src={(getitem == 'light') ? Globe : GlobeDark}\r\n                        alt=\"\" style={{ width: '18px', height: '18px', position: 'absolute', top: '50%', left: '-12px', transform: 'translateY(-50%)', }} />\r\n                    <Select\r\n                        labelId=\"demo-select-small\"\r\n                        id=\"demo-select-small\"\r\n                        value={i18n.language}\r\n                        label=\"Language\"\r\n                        onChange={(e) => {\r\n                            i18n.changeLanguage(e.target.value)\r\n                            setInLocalStorage('lng', e.target.value)\r\n                        }}\r\n                    >\r\n                        {availableLanguages.map((language) => (\r\n                            <MenuItem key={language} value={language}>\r\n\r\n                                {language}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n            </li>\r\n            <li className=\"item\">\r\n              {/* <FormGroup>\r\n                <FormControlLabel\r\n                  sx={{\r\n                    marginRight: 0,\r\n                    '& .MuiSwitch-root': {\r\n                      marginRight: -1,\r\n                    },\r\n                  }}\r\n                  control={\r\n                    <MaterialUISwitch\r\n                      sx={{ m: 1 }}\r\n                      defaultChecked\r\n                      onClick={toggleTheme}\r\n                    />\r\n                  }\r\n                  label=\"\"\r\n                />\r\n              </FormGroup> */}\r\n\r\n              <div className=\"right__elementsItem theme__toggle\">\r\n                <div className=\"toggle__wrapper\">\r\n                    <button className=\"lightMode active\" onClick={toggleTheme}>\r\n                        <LightModeIcon />\r\n                    </button>\r\n                    <button className=\"darkMode\" onClick={toggleTheme}>\r\n                        <DarkModeIcon />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </header>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import { useTranslation } from 'react-i18next'\r\nimport { getFromLocalStorage } from './useLocalStorage'\r\n\r\ntype LangType = [\r\n  {\r\n    value: any\r\n    label: any\r\n  },\r\n  {\r\n    value: any\r\n    label: any\r\n  }\r\n]\r\n\r\nconst LANGS: LangType = [\r\n  {\r\n    value: 'en',\r\n    label: 'English',\r\n  },\r\n  {\r\n    value: 'de',\r\n    label: 'German',\r\n  },\r\n]\r\n\r\nexport default function useLocales() {\r\n  const { i18n, t } = useTranslation()\r\n  const langStorage = getFromLocalStorage('i18nextLng')\r\n  const currentLang = LANGS.find((_lang) => _lang.value === langStorage)\r\n\r\n  const handleChangeLanguage = (newlang: any) => {\r\n    i18n.changeLanguage(newlang)\r\n  }\r\n\r\n  return {\r\n    onChangeLang: handleChangeLanguage,\r\n    t,\r\n    currentLang,\r\n    allLang: LANGS,\r\n  }\r\n}\r\n"],"names":["i","styled","Switch","theme","width","height","padding","margin","transform","color","backgroundImage","encodeURIComponent","opacity","backgroundColor","palette","mode","content","position","left","top","backgroundRepeat","backgroundPosition","borderRadius","toggleTheme","i18n","useTranslation","t","useLocales","navigate","useNavigate","dispatch","useAppDispatch","user","useSelector","state","auth","logoutHandler","e","preventDefault","logout","refreshToken","localStorage","getItem","localStorageVar","username","apiVrbls","getitem","getFromLocalStorage","className","to","src","Logo","alt","onClick","window","location","pathname","match","sx","m","minWidth","size","id","Globe","GlobeDark","style","labelId","value","language","label","onChange","changeLanguage","target","setInLocalStorage","availableLanguages","LANGS","langStorage","onChangeLang","newlang","currentLang","find","_lang","allLang"],"sourceRoot":""}