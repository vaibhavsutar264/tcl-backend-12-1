{"version":3,"file":"989.bundle.js","mappings":"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","sources":["webpack://tclcpasstwentyfirstoct/./src/components/common/icons/setting.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/icons/tickets.tsx","webpack://tclcpasstwentyfirstoct/./src/components/common/elements/SideBar.tsx","webpack://tclcpasstwentyfirstoct/./src/hooks/useLocales.tsx"],"sourcesContent":["import { typeVar } from '../../../utils/constants'\r\n\r\nconst Setting = () => {\r\n  return (\r\n<svg\r\nid=\"setting\"\r\ndata-name=\"setting\"\r\nxmlns=\"http://www.w3.org/2000/svg\"\r\ntype={typeVar.IMAGE_SVG}\r\nwidth=\"20.594\"\r\nheight=\"20.6\"\r\nviewBox=\"0 0 20.594 20.6\"\r\n>\r\n<path\r\n    id=\"Path_13737\"\r\n    data-name=\"Path 13737\"\r\n    d=\"M87.077,26.563H86.043a1.462,1.462,0,0,1-1.418-1.126l-.214-.874a8.212,8.212,0,0,1-2.56-1.181l-.816.4a1.459,1.459,0,0,1-1.77-.368l-.659-.771a1.459,1.459,0,0,1-.061-1.808l.522-.714a8.339,8.339,0,0,1-.5-1.4l-.89-.234a1.462,1.462,0,0,1-1.11-1.418V16.032a1.463,1.463,0,0,1,1.126-1.418l.874-.2a8.318,8.318,0,0,1,.576-1.542l-.512-.739a1.463,1.463,0,0,1,.106-1.808l.685-.774a1.465,1.465,0,0,1,1.782-.32l.8.419h0A8.15,8.15,0,0,1,84.4,8.563l.214-.877a1.462,1.462,0,0,1,1.424-1.123h1.034A1.463,1.463,0,0,1,88.5,7.683l.214.88a8.124,8.124,0,0,1,2.56,1.181l.8-.413a1.462,1.462,0,0,1,1.776.362l.669.79a1.466,1.466,0,0,1,.07,1.811l-.528.73h0a8.207,8.207,0,0,1,.506,1.386l.877.214a1.462,1.462,0,0,1,1.117,1.424v1.034a1.462,1.462,0,0,1-1.12,1.424l-.874.214a8.537,8.537,0,0,1-.579,1.533L94.5,21a1.459,1.459,0,0,1-.115,1.808l-.682.771a1.469,1.469,0,0,1-1.786.32l-.778-.416a8.152,8.152,0,0,1-2.422,1.078l-.23.89a1.463,1.463,0,0,1-1.408,1.11Zm-5.165-4.384a.566.566,0,0,1,.336.112A7.108,7.108,0,0,0,85,23.571a.551.551,0,0,1,.422.416l.285,1.19h0a.346.346,0,0,0,.336.266h1.034a.32.32,0,0,0,.32-.262l.3-1.206h0a.569.569,0,0,1,.422-.413,7.118,7.118,0,0,0,2.64-1.19.556.556,0,0,1,.608-.048l1.078.576a.342.342,0,0,0,.422-.074l.688-.771h0a.342.342,0,0,0,.029-.426L92.875,20.6a.567.567,0,0,1-.029-.589,7.11,7.11,0,0,0,.714-1.885.567.567,0,0,1,.416-.422l1.2-.294h0a.346.346,0,0,0,.266-.336V16.048a.345.345,0,0,0-.262-.336l-1.206-.294a.567.567,0,0,1-.416-.422,7.16,7.16,0,0,0-.64-1.77.56.56,0,0,1,.045-.589l.73-1h0a.343.343,0,0,0-.019-.426l-.682-.787a.339.339,0,0,0-.419-.086l-1.11.557a.553.553,0,0,1-.589-.054,7.081,7.081,0,0,0-2.746-1.28.566.566,0,0,1-.422-.416l-.294-1.2a.346.346,0,0,0-.32-.266h-1.05a.346.346,0,0,0-.336.266l-.294,1.219a.566.566,0,0,1-.422.413,7.129,7.129,0,0,0-2.624,1.181.553.553,0,0,1-.6.054l-1.1-.579a.352.352,0,0,0-.422.077l-.685.774a.352.352,0,0,0-.026.429l.707,1.018h0a.56.56,0,0,1,.032.589,7.129,7.129,0,0,0-.723,1.9.56.56,0,0,1-.416.422l-1.19.282a.346.346,0,0,0-.266.336v1.034a.349.349,0,0,0,.262.339l1.206.3h0a.557.557,0,0,1,.41.422,7.177,7.177,0,0,0,.64,1.77.56.56,0,0,1-.032.579l-.717.989a.342.342,0,0,0,.016.426l.662.79a.346.346,0,0,0,.419.09l1.117-.554h0a.57.57,0,0,1,.25-.058Zm4.653-2.1a3.52,3.52,0,1,1,2.489-1.031A3.52,3.52,0,0,1,86.565,20.083Zm0-5.91a2.394,2.394,0,1,0,1.691.7,2.4,2.4,0,0,0-1.691-.7Z\"\r\n    transform=\"translate(-76.265 -6.263)\"\r\n    fill=\"#092133\"\r\n    stroke=\"#092133\"\r\n    strokeWidth=\"0.6\"\r\n    opacity=\"0.7\"\r\n/>\r\n</svg>\r\n  )\r\n}\r\n\r\nexport default Setting\r\n","import { typeVar } from '../../../utils/constants'\r\n\r\nconst Tickets = () => {\r\n  return (\r\n    <svg\r\n    id=\"tickets\"\r\n    data-name=\"tickets\"\r\n                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        type={typeVar.IMAGE_SVG}\r\n                                        width=\"20.2\"\r\n                                        height=\"22.167\"\r\n                                        viewBox=\"0 0 20.2 22.167\"\r\n                                    >\r\n                                        <g\r\n                                            id=\"_01_align_center\"\r\n                                            data-name=\"01 align center\"\r\n                                            transform=\"matrix(0.891, 0.454, -0.454, 0.891, 5.499, -1.362)\"\r\n                                            opacity=\"0.7\"\r\n                                        >\r\n                                            <path\r\n                                                id=\"Path_13687\"\r\n                                                data-name=\"Path 13687\"\r\n                                                d=\"M14.25,0h-3V.75a1.5,1.5,0,1,1-3,0V0h-3A2.25,2.25,0,0,0,3,2.25V18H8.25v-.75a1.5,1.5,0,0,1,3,0V18H16.5V2.25A2.25,2.25,0,0,0,14.25,0ZM12.655,16.5a3,3,0,0,0-5.811,0H4.5V12.75H6.75v-1.5H4.5v-9a.75.75,0,0,1,.75-.75H6.845a3,3,0,0,0,5.811,0H14.25a.75.75,0,0,1,.75.75v9H12.75v1.5H15V16.5Z\"\r\n                                                transform=\"translate(0)\"\r\n                                                fill=\"#092133\"\r\n                                            />\r\n                                        </g>\r\n                                    </svg>\r\n  )\r\n}\r\n\r\nexport default Tickets\r\n","import * as React from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useDarkMode } from '../../../themes/useDarkMode'\r\nimport { apiVrbls, appRoutes, appThemes, localStorageVar, typeVar } from '../../../utils/constants'\r\nimport { lightTheme, darkTheme } from '../../../themes/globalStyles'\r\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\r\nimport Avatar from '@mui/material/Avatar'\r\nimport Badge from '@mui/material/Badge'\r\nimport Button from '@mui/material/Button'\r\nimport DarkModeIcon from '@mui/icons-material/DarkMode'\r\nimport FormControl from '@mui/material/FormControl'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport InputBase from '@mui/material/InputBase'\r\nimport KeyboardDoubleArrowLeftIcon from '@mui/icons-material/KeyboardDoubleArrowLeft'\r\nimport LightModeIcon from '@mui/icons-material/LightMode'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport Logo from '../../../assets/images/CPaaSLogo.png'\r\nimport DarkLogo from '../../../assets/images/CPaaSLogo-dark.png'\r\nimport Menu from '@mui/material/Menu'\r\nimport MenuItem from '@mui/material/MenuItem'\r\nimport NotificationsNoneIcon from '@mui/icons-material/NotificationsNone'\r\nimport Paper from '@mui/material/Paper'\r\nimport SearchIcon from '@mui/icons-material/Search'\r\nimport { availableLanguages } from '../../../i18n'\r\nimport { getFromLocalStorage, setInLocalStorage } from '../../../hooks/useLocalStorage'\r\nimport useLocales from '../../../hooks/useLocales'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { logout } from '../../../redux/slices/authSlice'\r\nimport { useDispatch, useSelector } from '../../../redux/store'\r\nimport Setting from '../icons/setting'\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport LogoutOutlinedIcon from '@mui/icons-material/LogoutOutlined';\r\nimport SpeedOutlinedIcon from '@mui/icons-material/SpeedOutlined';\r\nimport PersonOutlineOutlinedIcon from '@mui/icons-material/PersonOutlineOutlined';\r\nimport HomeRepairServiceOutlinedIcon from '@mui/icons-material/HomeRepairServiceOutlined';\r\nimport ChatBubbleTwoToneIcon from '@mui/icons-material/ChatBubbleTwoTone';\r\nimport ReceiptOutlinedIcon from '@mui/icons-material/ReceiptOutlined';\r\nimport ConfirmationNumberOutlinedIcon from '@mui/icons-material/ConfirmationNumberOutlined';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport Globe from '../../../assets/images/svg/globe.svg'\r\nimport GlobeDark from '../../../assets/images/svg/globe-dark.svg'\r\nimport Ticket from '../icons/tickets'\r\n\r\n\r\ntype SidebarProps = {\r\n    toggleTheme: any\r\n    handleADWidth?: any\r\n    handleBDWidth?: any\r\n}\r\n\r\nexport const SideBar = ({ toggleTheme, handleADWidth, handleBDWidth }: SidebarProps) => {\r\n    const dispatch = useDispatch()\r\n    const { user } = useSelector((state: any) => state.auth || []);\r\n    const { i18n } = useTranslation()\r\n    const { t } = useLocales()\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\r\n    const navigate = useNavigate()\r\n    const open = Boolean(anchorEl)\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n    const handleClose = () => {\r\n        setAnchorEl(null)\r\n    }\r\n    const handelLogout = () => {\r\n        dispatch(logout({\r\n            refreshToken: `${getFromLocalStorage(localStorageVar.TOKEN_VAR)}`,\r\n            username: user[apiVrbls.USER.EMAIL_ID]\r\n        }));\r\n    }\r\n    const [theme] = useDarkMode()\r\n    const themeMode = theme === appThemes.LIGHT_THEME ? lightTheme : darkTheme\r\n    const getitem = getFromLocalStorage(localStorageVar.THEME_VAR)\r\n\r\n    const getActiveClass = (path: any) => {\r\n        return window.location.pathname.includes(path) ? 'active' : ''\r\n    }\r\n    if (user == null) {\r\n        navigate('/')\r\n    }\r\n\r\n// useEffect(() => {\r\n//     const noTranslate= document.getElementById('demo-select-small')\r\n//     console.log(noTranslate?.innerHTML)\r\n//     // noTranslate.innerHTML = `English`  \r\n// },[])\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"dashboard__navbar\" id=\"sidebar-top\" style={{ position: 'fixed', top: 0, zIndex: 2 }}>\r\n                <div className=\"dashboard__container\">\r\n                    <Link className=\"logo\" to=\"/\">\r\n                        {\r\n                            (getitem == 'light') ?\r\n                                (<img id='tata-logo-invoice' src={DarkLogo} alt=\"CPAAS TCL\" />) :\r\n                                (<img id='tata-logo-invoice' src={Logo} alt=\"CPAAS TCL\" />)\r\n                        }\r\n                    </Link>\r\n                    <div className=\"right__elements\">\r\n                        <div className=\"right__elementsItem search__group\">\r\n                            <Paper\r\n                                component=\"form\"\r\n                                className=\"search__form\"\r\n                                sx={{\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                    width: 478,\r\n                                }}\r\n                            >\r\n                                <InputBase\r\n                                    onFocus={(e) => {\r\n                                        e.target.placeholder = '';\r\n                                    }}\r\n                                    onBlur={(e) => {\r\n                                        e.target.placeholder = `${t<string>('searchWithinSite')}`\r\n                                    }}\r\n                                    sx={{ ml: 1, flex: 1 }}\r\n                                    placeholder={t<string>('searchWithinSite')}\r\n                                    inputProps={{\r\n                                        'aria-label': 'Search Products, Orders and Clients',\r\n                                    }}\r\n                                />\r\n                                <IconButton\r\n                                    id=\"searchicon-sidebar\"\r\n                                    type=\"button\"\r\n                                    sx={{ p: '10px' }}\r\n                                    aria-label=\"search\"\r\n                                >\r\n                                    <SearchIcon />\r\n                                </IconButton>\r\n                            </Paper>\r\n                        </div>\r\n                        <div className=\"right__elementsItem theme__toggle\">\r\n                            <div className=\"toggle__wrapper\">\r\n                                <button className=\"lightMode active\" onClick={toggleTheme}>\r\n                                    <LightModeIcon />\r\n                                </button>\r\n                                <button className=\"darkMode\" onClick={toggleTheme}>\r\n                                    <DarkModeIcon />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"right__elementsItem language__selector\">\r\n                            <FormControl\r\n                                sx={{\r\n                                    m: 1,\r\n                                    minWidth: 100,\r\n                                    position: 'relative',\r\n                                }}\r\n                                size=\"small\"\r\n                                // id=\"lang-background-white\"\r\n                                id=\"lang-background-invoices\"\r\n                            >\r\n                                <img\r\n                                    src={(getitem == 'light') ? Globe : GlobeDark}\r\n                                    alt=\"\" style={{ width: '18px', height: '18px', position: 'absolute', top: '50%', left: '-12px', transform: 'translateY(-50%)', }} />\r\n                                <Select\r\n                                    labelId=\"demo-select-small\"\r\n                                    id=\"demo-select-small\"\r\n                                    value={i18n.language}\r\n                                    label=\"Language\"\r\n                                    onChange={(e) => {\r\n                                        i18n.changeLanguage(e.target.value)\r\n                                        setInLocalStorage('lng', e.target.value)\r\n                                    }}\r\n                                >\r\n                                    {availableLanguages? availableLanguages.map((language) => (\r\n                                        <MenuItem key={language} value={language}>\r\n                                            {language}\r\n                                        </MenuItem>\r\n                                    )): 'English' }\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className=\"right__elementsItem notification\">\r\n                            <Badge badgeContent={4} id='notification-badge' sx={{\r\n                                color: '#fff',\r\n                            }}>\r\n                                <NotificationsNoneIcon color=\"action\" />\r\n                            </Badge>\r\n                        </div>\r\n                        <div className=\"right__elementsItem profile__setting\">\r\n                            <Button\r\n                                id=\"basic-button\"\r\n                                aria-controls={open ? 'basic-menu' : undefined}\r\n                                aria-haspopup=\"true\"\r\n                                aria-expanded={open ? 'true' : undefined}\r\n                                onClick={handleClick}\r\n                                sx={{\r\n                                    marginRight: 0,\r\n                                    '& .MuiAvatar-root': {\r\n                                        fontSize: 12,\r\n                                    },\r\n                                }}\r\n                            >\r\n                                <Avatar\r\n                                    alt=\"Remy Sharp\"\r\n                                    src=\"\"\r\n                                    sx={{ width: 25, height: 25 }}\r\n                                />\r\n                                <span className=\"userName\">{user?.firstname}</span>\r\n                                <ArrowDropDownIcon className=\"dropArrow\" />\r\n                            </Button>\r\n                            <Menu\r\n                                className=\"profile__menu\"\r\n                                id=\"basic-menu\"\r\n                                anchorEl={anchorEl}\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                                MenuListProps={{\r\n                                    'aria-labelledby': 'basic-button',\r\n                                }}\r\n                            >\r\n                                <MenuItem onClick={handleClose}>\r\n                                    <div className=\"dropProfile__wrapper\">\r\n                                        <div className=\"profile__picture\">\r\n                                            <Avatar alt=\"Remy Sharp\" src=\"\" />\r\n                                        </div>\r\n                                        <div className=\"profile__content\">\r\n                                            <p className=\"name\">{user?.firstname}</p>\r\n                                            <p className=\"deg\">{user?.firstname}</p>\r\n                                            <p className=\"status\">\r\n                                                {t<string>('lastActivity')}: 2 Aug, 2022 {t<string>('at')} 5:30{t<string>('amPm')}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </MenuItem>\r\n                                <MenuItem onClick={handleClose} style={{ paddingTop: '8px' }}>\r\n                                    <a href=\"/accountdetails\" className=\"profile__dropLink userinfo-dropdown\">\r\n                                        <span className=\"icon\">\r\n                                            <Setting />\r\n                                        </span>\r\n                                        <span className=\"text\">{t<string>('setting')}</span>\r\n                                    </a>\r\n                                </MenuItem>\r\n                                <MenuItem onClick={handleClose}>\r\n                                    <a href=\"/\" className=\"profile__dropLink userinfo-dropdown\">\r\n                                        <span className=\"icon\">\r\n                                            <LockOutlinedIcon />\r\n                                        </span>\r\n                                        <span className=\"text\">{t<string>('changePassword')}</span>\r\n                                    </a>\r\n                                </MenuItem>\r\n                                <MenuItem onClick={handelLogout} style={{ paddingTop: '12px' }}>\r\n                                    <span className=\"icon\">\r\n                                        <LogoutOutlinedIcon />\r\n                                    </span>\r\n                                    <span className=\"text logout-text\">{t<string>('logout')}</span>\r\n                                </MenuItem>\r\n                            </Menu>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"dashboard__sidebar\" id=\"sidebar-left\" style={{ transition: 'all 350ms 0ms ease-in', zIndex: 1, height: '100vh', position: 'fixed', top: '90px' }}>\r\n                <div className=\"sidebar__inner\">\r\n                    <ul className=\"sidebar__list\">\r\n                        <li className=\"list__item\">\r\n                            <Link className={`item__link ${getActiveClass(appRoutes.DASHBOARD)}`} to={appRoutes.DASHBOARD}>\r\n                                <span className=\"link__icon\">\r\n                                    <SpeedOutlinedIcon />\r\n                                </span>\r\n                                <span className=\"link__text\" id=\"link__text\">{t<string>('dashboard')}</span>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"list__item\">\r\n                            <Link className=\"item__link\" to=\"\">\r\n                                <span className=\"link__icon\">\r\n                                    <PersonOutlineOutlinedIcon />\r\n                                </span>\r\n                                <span className=\"link__text\" id=\"link__text\">\r\n                                    {t<string>('userManagement')}\r\n                                </span>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"list__item\">\r\n                            <Link className=\"item__link\" to=\"\">\r\n                                <span className=\"link__icon\">\r\n                                    <HomeRepairServiceOutlinedIcon />\r\n                                </span>\r\n                                <span className=\"link__text\" id=\"link__text\">{t<string>('services')}</span>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"list__item\">\r\n                            <Link className=\"item__link\" to=\"\">\r\n                                <span className=\"link__icon\">\r\n                                    <ChatBubbleTwoToneIcon />\r\n                                </span>\r\n                                <span className=\"link__text\" id=\"link__text\">{t<string>('sms')}</span>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"list__item\">\r\n                            <Link className={`item__link ${getActiveClass(appRoutes.BILLING)}`} to={appRoutes.BILLING}>\r\n                                <span className=\"link__icon\">\r\n                                    <ReceiptOutlinedIcon />\r\n                                </span>\r\n                                <span className=\"link__text\" id=\"link__text\">\r\n                                    {t<string>('billingInvoice')}\r\n                                </span>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"list__item\">\r\n                            <Link className=\"item__link\" to=\"\">\r\n                                <span className=\"link__icon\">\r\n                                    {/* <ConfirmationNumberOutlinedIcon /> */}\r\n                                    <Ticket />\r\n                                </span>\r\n                                <span className=\"link__text\" id=\"link__text\">{t<string>('tickets')}</span>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"list__item\">\r\n                            <Link className=\"item__link\" to=\"\">\r\n                                <span className=\"link__icon\">\r\n                                    <SettingsIcon />\r\n                                </span>\r\n                                <span className=\"link__text\" id=\"link__text\">{t<string>('support')}</span>\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <button type=\"button\" className=\"sidebarToggle\" onClick={() => {\r\n                    if (handleADWidth) {\r\n                        handleADWidth();\r\n                    }\r\n                    if (handleBDWidth) {\r\n                        handleBDWidth();\r\n                    }\r\n                    const texts = document.querySelectorAll<HTMLElement>('#link__text');\r\n                    const sidebarLeft = document.querySelector('#sidebar-left') as HTMLElement;\r\n                    const text = document.querySelector('#link__text') as HTMLElement;\r\n                    if (text.style.display != 'none') {\r\n                        console.log(sidebarLeft.style.width);\r\n                        for (let i = 0; i < texts.length; i++) {\r\n                            texts[i].style.display = 'none'\r\n                        }\r\n                        sidebarLeft.style.width = 'max-content';\r\n                    }\r\n                    else {\r\n                        console.log(sidebarLeft.style.width);\r\n                        for (let i = 0; i < texts.length; i++) {\r\n                            texts[i].style.display = 'block'\r\n                        }\r\n                        sidebarLeft.style.width = '300px';\r\n                    }\r\n                }}>\r\n                    <KeyboardDoubleArrowLeftIcon />\r\n                </button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useTranslation } from 'react-i18next'\r\nimport { getFromLocalStorage } from './useLocalStorage'\r\n\r\ntype LangType = [\r\n  {\r\n    value: any\r\n    label: any\r\n  },\r\n  {\r\n    value: any\r\n    label: any\r\n  }\r\n]\r\n\r\nconst LANGS: LangType = [\r\n  {\r\n    value: 'en',\r\n    label: 'English',\r\n  },\r\n  {\r\n    value: 'de',\r\n    label: 'German',\r\n  },\r\n]\r\n\r\nexport default function useLocales() {\r\n  const { i18n, t } = useTranslation()\r\n  const langStorage = getFromLocalStorage('i18nextLng')\r\n  const currentLang = LANGS.find((_lang) => _lang.value === langStorage)\r\n\r\n  const handleChangeLanguage = (newlang: any) => {\r\n    i18n.changeLanguage(newlang)\r\n  }\r\n\r\n  return {\r\n    onChangeLang: handleChangeLanguage,\r\n    t,\r\n    currentLang,\r\n    allLang: LANGS,\r\n  }\r\n}\r\n"],"names":["id","xmlns","type","typeVar","width","height","viewBox","d","transform","fill","stroke","strokeWidth","opacity","SideBar","toggleTheme","handleADWidth","handleBDWidth","dispatch","useDispatch","user","useSelector","state","auth","i18n","useTranslation","t","useLocales","React","anchorEl","setAnchorEl","navigate","useNavigate","open","Boolean","handleClose","getitem","useDarkMode","appThemes","lightTheme","darkTheme","getFromLocalStorage","localStorageVar","getActiveClass","path","window","location","pathname","includes","className","style","position","top","zIndex","to","src","DarkLogo","alt","Logo","Paper","component","sx","display","alignItems","InputBase","onFocus","e","target","placeholder","onBlur","ml","flex","inputProps","IconButton","p","Search","onClick","LightMode","DarkMode","FormControl","m","minWidth","size","Globe","GlobeDark","left","Select","labelId","value","language","label","onChange","changeLanguage","setInLocalStorage","availableLanguages","MenuItem","Badge","badgeContent","color","NotificationsNone","Button","undefined","event","currentTarget","marginRight","fontSize","Avatar","firstname","ArrowDropDown","Menu","onClose","MenuListProps","paddingTop","href","LockOutlined","logout","refreshToken","username","apiVrbls","LogoutOutlined","transition","appRoutes","SpeedOutlined","PersonOutlineOutlined","HomeRepairServiceOutlined","ChatBubbleTwoTone","ReceiptOutlined","Settings","texts","document","querySelectorAll","sidebarLeft","querySelector","console","log","i","length","KeyboardDoubleArrowLeft","LANGS","langStorage","onChangeLang","newlang","currentLang","find","_lang","allLang"],"sourceRoot":""}