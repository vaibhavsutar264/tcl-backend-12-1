{"version":3,"file":"2.bundle.js","mappings":"sxCAqBO,IAAMA,EAAY,SAAH,GAA8C,IAAxCC,EAAW,EAAXA,YAExB,GAA6FC,EAAAA,EAAAA,KAAY,SAACC,GAAU,OAAKA,EAAMC,OAAO,IAEhIC,GAFS,EAAPC,QAAkB,EAATC,UAAoB,EAATC,UAAS,EAAEC,SAAa,EAAEC,WAAsB,EAALC,MAAW,EAAJC,KAAU,EAAJC,MAEnEC,EAAAA,EAAAA,QACjBC,EAAAA,EAAAA,YAAU,WACNV,GAASW,EAAAA,EAAAA,IAAa,CAAEC,YAAa,MACrCZ,GAASa,EAAAA,EAAAA,MACb,GAAG,CAACb,KACUc,EAAAA,EAAAA,KAANC,EAAR,IAG2C,KAAfC,EAAAA,EAAAA,WAAS,GAAM,GAKI,GALlC,KAAW,KAKuB,GAAjBA,EAAAA,EAAAA,UAAS,SAAQ,IAAxCC,EAAO,KAAEC,EAAU,KAO1B,OACI,iBAAKC,UAAU,qBAAoB,WAC/B,SAAC,IAAO,CAACvB,YAAaA,EAAawB,cARvB,WAEpBF,EADgC,SAAXD,EAAoB,QAAU,QAErD,KAMU,gBAAKE,UAAU,qBAAqBE,MAAO,CAAEC,MAAO,eAAF,OAAiBL,EAAO,KAAKM,WAAY,GAAF,OAAKN,IAAY,UACtG,0BACI,uDAKpB,EAEA,W","sources":["webpack://tclcpasstwentyfirstoct/./src/components/dashboard/Dashboard.tsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport RaiseTicket from '../common/elements/RaiseTicket'\r\nimport { SideBar } from '../common/elements/SideBar'\r\nimport DataTable from '../common/tables/DataTables'\r\nimport { BreadCrums } from '../common/elements/BreadCrum'\r\nimport { PageSearch } from '../common/elements/PageSearch'\r\nimport { breadCrums, dataTables } from '../../utils/constants'\r\nimport {\r\n    useDispatch as useAppDispatch,\r\n    useSelector\r\n} from '../../redux/store'\r\nimport { cardFilter, ChangePageBilling, downloadBillingInvoice, downloadBillingInvoiceCDR, filterData, loadInvoices, searchData, sortData } from '../../redux/slices/billingSlice'\r\nimport useLocales from '../../hooks/useLocales'\r\nimport Invoice from '../common/icons/invoice'\r\nimport Overdue from '../common/icons/overdue'\r\nimport PaidInvoice from '../common/icons/paidInvoice'\r\nimport UnpaidInvoice from '../common/icons/unpaidInvoice'\r\nimport Card from '../common/elements/card'\r\nimport { getCardCount } from '../../utils/helpers'\r\nimport { getAcDetails } from '../../redux/slices/accountSlice'\r\n\r\nexport const Dashboard = ({ toggleTheme }: { toggleTheme: any }) => {\r\n\r\n    const { isError, isLoading, isSuccess, PageData = [], MasterData = [], total, page, take } = useSelector((state: any) => state.billing);\r\n\r\n    const dispatch = useAppDispatch();\r\n    useEffect(() => {\r\n        dispatch(loadInvoices({ searchValue: \"\" }))\r\n        dispatch(getAcDetails())\r\n    }, [dispatch])\r\n    const { t } = useLocales()\r\n\r\n\r\n    const [showIt, setShowIt] = useState(false);\r\n    const handleShow = () => {\r\n        setShowIt(!showIt);\r\n    };\r\n\r\n    const [bDWidth, setBDWidth] = useState('300px');\r\n  const handleBDWidth = () => {\r\n    const currentWidth = bDWidth == '300px'? '130px' : '300px';\r\n    setBDWidth(currentWidth);\r\n  };\r\n\r\n\r\n    return (\r\n        <div className=\"dashboard__wrapper\">\r\n            <SideBar toggleTheme={toggleTheme} handleBDWidth={handleBDWidth} />\r\n            <div className=\"dashboard__content\" style={{ width: `calc(100% - ${bDWidth})`, marginLeft: `${bDWidth}` }}>\r\n                <div>\r\n                    <h1>Welcome to Dashboard</h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n"],"names":["Dashboard","toggleTheme","useSelector","state","billing","dispatch","isError","isLoading","isSuccess","PageData","MasterData","total","page","take","useAppDispatch","useEffect","loadInvoices","searchValue","getAcDetails","useLocales","t","useState","bDWidth","setBDWidth","className","handleBDWidth","style","width","marginLeft"],"sourceRoot":""}