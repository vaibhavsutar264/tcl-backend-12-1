{"version":3,"file":"48.bundle.js","mappings":"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","sources":["webpack://tclcpasstwentyfirstoct/./node_modules/@mui/icons-material/MailOutline.js","webpack://tclcpasstwentyfirstoct/./src/components/login/forgot-password/ForgotPassword.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H4V8l8 5 8-5v10zm-8-7L4 6h16l-8 5z\"\n}), 'MailOutline');\nexports.default = _default;","import React, { SyntheticEvent, useEffect, useState } from 'react'\r\nimport {\r\n    useDispatch as useAppDispatch,\r\n    useSelector as useAppSelector,\r\n} from '../../../redux/store'\r\nimport { Email } from '../../../types/authType'\r\nimport { forgotPassword } from '../../../redux/slices/authSlice'\r\nimport { toast } from 'react-toastify'\r\n// Importing Material UI\r\nimport {\r\n    Box,\r\n    TextField,\r\n    InputLabel,\r\n    styled,\r\n    Button,\r\n    ButtonProps,\r\n    FormGroup,\r\n    FormControl,\r\n} from '@mui/material'\r\nimport { purple } from '@mui/material/colors'\r\nimport MailOutlineIcon from '@mui/icons-material/MailOutline'\r\n// Importing Images\r\nimport Background from '../../../assets/images/login-bg.jpg'\r\nimport ChartImg from '../../../assets/images/svg/Chart.svg'\r\nimport PieChartImg from '../../../assets/images/svg/PieCharts.svg'\r\nimport SalesImg from '../../../assets/images/svg/Sales.svg'\r\nimport VoiceImg from '../../../assets/images/svg/Voice.svg'\r\nimport ChatImg from '../../../assets/images/svg/Chat.svg'\r\nimport VideoImg from '../../../assets/images/svg/Video.svg'\r\nimport WhatsappImg from '../../../assets/images/svg/Whatsapp.svg'\r\nimport BannerBg from '../../common/elements/banner'\r\nimport BackgroundBox from '../../common/elements/backGroundBox'\r\nimport useLocales from '../../../hooks/useLocales'\r\nimport Header from '../../header/Header'\r\n\r\nconst ColorButton = styled(Button)<ButtonProps>(({ theme }) => ({\r\n    color: theme.palette.getContrastText(purple[500]),\r\n    backgroundColor: purple[500],\r\n    height: '70px',\r\n    width: '100%',\r\n    borderRadius: '35px',\r\n    mixBlendMode: 'luminosity',\r\n    opacity: 0.5,\r\n    '&:hover': {\r\n        backgroundColor: purple[700],\r\n    },\r\n}))\r\n\r\nconst ForgotPassword = ({toggleTheme}:any) => {\r\n    const [open, setOpen] = useState(true)\r\n    const dispatch = useAppDispatch()\r\n    const { t } = useLocales()\r\n    const { isError, isSuccess, message, emailSent } = useAppSelector(\r\n        (state: any) => state.auth\r\n    )\r\n    const [email, setEmail] = useState('')\r\n\r\n    const forgotPasswordSubmit = (e: SyntheticEvent) => {\r\n        e.preventDefault()\r\n        const userEmail: Email = {\r\n            email: email,\r\n        }\r\n        dispatch(forgotPassword(userEmail))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isError) {\r\n            console.log(message)\r\n        }\r\n\r\n        if (isSuccess) {\r\n            console.log(message)\r\n        }\r\n    }, [isError, isSuccess, message, emailSent])\r\n\r\n    const handleEmailChange = (e: SyntheticEvent) => {\r\n        e.preventDefault()\r\n        const submitButtonElement = document.getElementById(\r\n            'btn-enable-style'\r\n        ) as HTMLButtonElement\r\n        setEmail((e.target as HTMLInputElement).value)\r\n        const emailVariable = /^[^ ]+@[^ ]+\\.[a-z]{2,4}$/\r\n        const emailBoxElement = document.getElementById(\r\n            'email-box'\r\n        ) as HTMLInputElement\r\n        if ((e.target as HTMLInputElement).value.match(emailVariable)) {\r\n            setOpen(false)\r\n            submitButtonElement.className = 'customBtn-01 btn-enable-style'\r\n        } else {\r\n            setOpen(true)\r\n            submitButtonElement.className = 'customBtn-01'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Header toggleTheme={toggleTheme} />\r\n        <Box className=\"account__screen\">\r\n            {/* ACCOUNT SCREEN BANNER START*/}\r\n            <BannerBg />\r\n            {/* ACCOUNT SCREEN BANNER END */}\r\n            {/* ACCOUNT SCREEN ANIMATION START */}\r\n            <BackgroundBox />\r\n            {/* ACCOUNT SCREEN ANIMATION END */}\r\n            {/* ACCOUNT FORM START */}\r\n            <Box sx={{ flexGrow: 1 }} id=\"login-form\" className=\"account__form\">\r\n                <div className=\"form__inner\">\r\n                    <Box sx={{ width: 1 }} className=\"account__form__header\">\r\n                        <h3 className=\"title\">{t<string>('forgotPassword')}</h3>\r\n                    </Box>\r\n                    <Box\r\n                        sx={{ flexGrow: 1, paddingTop: '0 !important' }}\r\n                        className=\"account__form__body\"\r\n                    >\r\n                        <form onSubmit={forgotPasswordSubmit} action=\"#\" method=\"post\">\r\n                            <FormGroup>\r\n                                <FormControl\r\n                                    className=\"input-wrapper no-margin yes-margin\"\r\n                                    id=\"email-box\"\r\n                                    sx={{\r\n                                        display: 'flex',\r\n                                        alignItems: 'flex-end',\r\n                                        position: 'relative',\r\n                                        width: 1,\r\n                                        margin: '20px 0px',\r\n                                    }}\r\n                                >\r\n                                    <InputLabel htmlFor=\"ammount\" className=\"label__icon\">\r\n                                        <MailOutlineIcon id=\"mail-icon\" />\r\n                                    </InputLabel>\r\n                                    <TextField\r\n                                        className=\"input-field\"\r\n                                        required\r\n                                        id=\"ammount\"\r\n                                        label={t<string>('email')}\r\n                                        variant=\"standard\"\r\n                                        autoComplete='false'\r\n                                        sx={{ width: 1, borderRadius: '10px !important' }}\r\n                                        name=\"ammount\"\r\n                                        type=\"text\"\r\n                                        onInput={handleEmailChange}\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl\r\n                                    className=\"input-wrapper submitBtn\"\r\n                                    sx={{\r\n                                        display: 'flex',\r\n                                        alignItems: 'flex-end',\r\n                                        position: 'relative',\r\n                                        width: 1,\r\n                                        marginTop: '50px',\r\n                                    }}\r\n                                >\r\n                                    <ColorButton\r\n                                        type=\"submit\"\r\n                                        id=\"btn-enable-style\"\r\n                                        data-testid=\"button-element\"\r\n                                        disabled={open}\r\n                                        variant=\"contained\"\r\n                                        className=\"customBtn-01\"\r\n                                        sx={{\r\n                                            fontSize: '18px',\r\n                                            lineHeight: '21px',\r\n                                            fontFamily: 'ubuntu',\r\n                                            letterSpacing: '-0.72px',\r\n                                        }}\r\n                                    >\r\n                                        {t<string>('getLink')}\r\n                                    </ColorButton>\r\n                                </FormControl>\r\n                            </FormGroup>\r\n                        </form>\r\n                    </Box>\r\n                </div>\r\n            </Box>\r\n            {/* ACCOUNT FROM END */}\r\n        </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword\r\n"],"names":["_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","ColorButton","styled","Button","color","theme","palette","getContrastText","purple","backgroundColor","height","width","borderRadius","mixBlendMode","opacity","toggleTheme","useState","open","setOpen","dispatch","useAppDispatch","t","useLocales","useAppSelector","state","auth","isError","isSuccess","message","emailSent","email","setEmail","useEffect","console","log","className","sx","flexGrow","id","paddingTop","onSubmit","e","preventDefault","userEmail","forgotPassword","action","method","display","alignItems","position","margin","htmlFor","required","label","variant","autoComplete","name","type","onInput","submitButtonElement","document","getElementById","target","value","match","onChange","marginTop","disabled","fontSize","lineHeight","fontFamily","letterSpacing"],"sourceRoot":""}